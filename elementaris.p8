pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
errorcounter=0
score=0
timer=0
level=1
xpos=8
ypos=0
etype=1
esrite=1
ename=""
element_falling=true
element_range=1
level_move_delay=0
move_delay=0
btn_timer=0
btn_timer_max=5
level_score=0
timer_counter=30


elements={}
levels={}
compounds={}

show_compound=false
scx=0
scy=0
scname=""
sccounter=40


title=true
game_over=true
game_over_timer=0

bg_tile=50

function _init()

	-- create elements
	-- format: element#, elementname, sprite#
	add(elements, {num=0, name="?", sprite=0})
	add(elements, {num=1, name="h", sprite=1})
	add(elements, {num=2, name="o", sprite=2})
	add(elements, {num=3, name="cl", sprite=3})

	-- create levels
	-- format: level#, time, elementramge
	add(levels, {num=1, timer=120, elementrange=3, delay=40, score=100})
	add(levels, {num=2, timer=120, elementrange=3, delay=40, score=250})

	-- create compounds
	add(compounds, {name="water", compound="121", score=20})
	add(compounds, {name="oxygen", compound="22", score=10})
	add(compounds, {name="hydrogen", compound="11", score=10})
	add(compounds, {name="hydrochloric acid", compound="13", score=10})

end

function new_game()
	game_over=false
	title=false
	score=0
	level=1
	
	new_level(level)

end

function new_level(level)

	for y=0,15 do
		for x=0,15 do
			mset(x,y,50)
		end
	end

	for l in all(levels) do
		
		if(l.num==level) then
			timer=l.timer
			element_range=l.elementrange	
			level_move_delay=l.delay
			new_element()
		 level_score=l.score

		end
	end
	
end

function get_element(element)
	for e in all(elements) do
		
		if(e.num==element) then
			return e
			--del(extras, s)
		end
	end

	return elements[1]
end

function new_element()
	check_for_compounds()

	rnum=flr(rnd(element_range))+1
	
	elem=get_element(rnum)

	etype=elem.num
	esprite=elem.sprite
	ename=elem.name
	xpos=8
	ypos=0	

	move_delay=level_move_delay

	element_falling=true

end

function _update()

	if(level_score<=score) then
		level=level+1
		new_level()
	end

	if(btn_timer>0) then
		btn_timer=btn_timer-1
	end

	if(timer_counter>0) then
		timer_counter=timer_counter-1
	end

	if(timer_counter<=0) then
		timer=timer-1
		timer_counter=30
		if(timer<0) then
			game_over=true
		end
	end


	if(game_over_timer>0) then
		game_over_timer=game_over_timer-1
 end

	move_delay=move_delay-1;

	if(game_over==false) then
		
		if(btn(⬅️) and btn_timer<=0) then
			sfx(0)
			xpos=xpos-1
			btn_timer=btn_timer_max
			if(xpos<0) then xpos=0 end
		end
		if(btn(➡️) and btn_timer<=0) then
			sfx(0)
			xpos=xpos+1
			btn_timer=btn_timer_max
			if(xpos>15) then xpos=15 end		
		end
		if(btn(⬇️) and btn_timer<=0) then
			if(room_below()) then
				sfx(1)
				ypos=ypos+1
				btn_timer=btn_timer_max
				if(ypos>14) then 
					sfx(2)
					ypos=15 
					mset(xpos,ypos,esprite);
					new_element()	
				end		
			else
				sfx(2)
				mset(xpos,ypos,esprite);
				new_element()			
			end
		end
	

	 if(element_falling and move_delay<=0) then
	  if(room_below()) then
				sfx(1)
				ypos=ypos+1
				if(ypos>14) then 
					sfx(2)
					ypos=15 
					mset(xpos,ypos,esprite);
					new_element()	
				end				
		 	move_delay=level_move_delay
			else
				if(ypos==1) then
					game_over=true
				end		
			
				sfx(2)
				mset(xpos,ypos,esprite);
				new_element()			
			end 	
	
	 end
	end

	if(game_over and game_over_timer<=0) then
		if(btnp(❎)) then
			new_game()
		end		
	end
end

function room_below()
	if(mget(xpos, ypos+1)==bg_tile) then
		return true
	end
	
	return false
end

function _draw()
	cls()

	if(game_over==false) then
		map(0,0,0,0,16,16)
		
		spr(esprite, xpos*8, ypos*8)

		rectfill(0,0,127,6,8)

		print("▤score ".. score .. "▤time "..timer.."▤level "..level.."▤", 2,1,7)

		if(show_compound==true) then
			spr(52, scx+4, scy)
			print(scname, scx+13, scy-6, 8)
			
			sccounter=sccounter-1
			
			if(sccounter<=0) then
				show_compound=false
			end
		end
	
	elseif(title) then
--	 spr(1, 56, 40, 2, 2)
		print("elementaris", 42,60,9)
		print("by wolfgang kierdorf", 24,68,8)
		print("press ❎ to start", 30,80,1)
	
	else
	 --spr(1, 56, 40, 2, 2)
		print("game over", 44,60,8)
		print("press ❎ to start", 30,80,1)
	end

end

function check_for_compounds()
	printh("---- "..errorcounter);

	errorcounter+=1
	for y=0,15 do
		for x=0,15 do
			if(mget(x,y)!=bg_tile) then
				check_hor_compound(x,y)
				check_ver_compound(x,y)
			end
		end
	end

end

function check_hor_compound(x,y)

	for c in all(compounds) do
		cfound=true
		len=#c.compound

		for pos=1,len do
			
			--printh(pos);

			--printh("checking:".. x.."/"..y.." "..c.compound.." len:"..len)
			--printh("pos:"..pos.." "..mget(x+(pos-1),y).."//"..c.compound[pos])
			--printh(cfound)

--			cfound=compare_map_part(x+(pos-1),y,c.compound[pos])

			if(tostr(mget(x+(pos-1),y))==c.compound[pos]) then
				cfound=true			
			else
				cfound=false
				break
			end	
		end
		
		--printh(cfound);
		
		if(cfound==true) then
			--printh("compound!");
			sfx(3)
			show_compound=true
			scx=x*8
			scy=(y-1)*8
			scname=c.name
			sccounter=40
			for pos=1, len do
			 mset(x+(pos-1),y,50)
			end
			score=score+c.score
			drop_tiles()
		end
		
	end	

end

function check_ver_compound(x,y)

	for c in all(compounds) do
		cfound=true
		len=#c.compound

		for pos=1,len do
			
			--printh(pos);

			--printh("checking:".. x.."/"..y.." "..c.compound.." len:"..len)
			--printh("pos:"..pos.." "..mget(x+(pos-1),y).."//"..c.compound[pos])
			--printh(cfound)

--			cfound=compare_map_part(x+(pos-1),y,c.compound[pos])

			if(tostr(mget(x,y+(pos-1)))==c.compound[pos]) then
				cfound=true			
			else
				cfound=false
				break
			end	
		end
		
		--printh(cfound);
		
		if(cfound==true) then
			--printh("compound!");
			sfx(3)
			show_compound=true
			scx=x*8
			scy=(y-1)*8
			scname=c.name
			sccounter=40
			for pos=1, len do
			 mset(x,y+(pos-1),50)
			end
			score=score+c.score
			drop_tiles()
		end
		
	end	

end


function compare_map_part(x,y,cstr)
	-- check if compound exists at x,y
	
		for pos=1,#cstr do
			if(tostr(mget(x+(pos-1),y))~=cstr[pos]) then
				return false
			end			
		end	

	return true
end

function drop_tiles()
	for y=15,1,-1 do
		for x=15,0,-1 do
			if(mget(x,y)==bg_tile) then
			 mset(x,y,mget(x,y-1))
			 mset(x,y-1, bg_tile)
			end
		end
	end
end
__gfx__
00000000cccccccc8888888899999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cc0cc0cc8880088899009099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007007c0cc0c77808808770999097000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770007c0000c77808808770999097000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770007c0000c77808808770999097000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007007c0cc0c77808808770999097000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cc0cc0cc8880088899009009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc8888888899999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000711111175000000507000077000088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111771110000000007000770000000880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000117117110000000000777700000007080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111117110000000000077000000070080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111771110000000000777700000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111110000000000700077007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111771110000000007700007770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000711111175000000507000007770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323200320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3200323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000003232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000063500735007350073500735007350073500635006350053500435003350033500235001350003500235001350013000130001300023000230003300033002d3002b3002930027300253000000000000
000100002535025350243502435022350203501f3501b3501835016350123500f3500b35007350033500235000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002905028050270502505023050210501c05019050120500e05009050050500505004050050500b0500f050110502500023000210001e0001b0001800015000110000d0000b00000000000000000000000
00070000036500465004650046500565005650066500665008650096500a0500b6500c6500d6500f650106501a5501d550205502355025550255502655026550255502455022550205501e5501e5502055022550
